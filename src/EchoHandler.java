import java.io.IOException;
import java.util.Map;

import com.sun.net.httpserver.HttpExchange;

public class EchoHandler extends BaseRouteHandler {
    /**
     * Handles the incoming HTTP request and generates an appropriate response.
     *
     * @param httpExchange The HTTP exchange object representing the request and response.
     * @throws IOException If an I/O error occurs while handling the request.
     */
    @Override
    public void handle(HttpExchange httpExchange) throws IOException {
        String buildResponse = "";
        int responseCode = 500;

        try {
            String requestParamValue = null;
            logger.log("httpExchange: " + httpExchange.getRequestMethod() + " " + httpExchange.getRequestURI());

            if ("GET".equals(httpExchange.getRequestMethod())) {
                requestParamValue = handleGetRequest(httpExchange);
            } else if ("POST".equals(httpExchange.getRequestMethod())) {
                requestParamValue = handlePostRequest(httpExchange);
            }
            buildResponse = buildResponse(requestParamValue);
            logger.log("Response: " + buildResponse);
        } catch (Exception e) {
            logger.log("Error handling request", e);
            buildResponse = buildResponse(e.getMessage());
            responseCode = 500;
        }
        this.handleResponse(httpExchange, buildResponse, responseCode);
    }

    /**
        * Handles the GET request and returns a formatted string containing information about the request.
        *
        * @param httpExchange The HttpExchange object representing the HTTP request and response.
        * @return A formatted string containing information about the request.
        */
    private String handleGetRequest(HttpExchange httpExchange) {
        IHttpRequestContextInfo contextInfo = new HttpRequestContextInfo(httpExchange);
        Map<String, String> queryMap = contextInfo.getQueryMap();
        String uri = contextInfo.getUri();
        String path = contextInfo.getUriPath();
        String queryMapString = queryMap.toString();
        String body = httpExchange.getRequestBody().toString();
        return "<br> 'URI' : '" + HttpHelpers.escapeResponseString(uri)
                + "' <br> 'path' : '" + HttpHelpers.escapeResponseString(path)
                + "' <br> 'body' : '" + HttpHelpers.escapeResponseString(body)
                + "' <br> 'queryParams' : '" + HttpHelpers.escapeResponseString(queryMapString)
                + "' <br>";
    }

    /**
     * Handles a POST request by delegating to the handleGetRequest method.
     *
     * @param httpExchange The HttpExchange object representing the HTTP request and response.
     * @return The response string generated by the handleGetRequest method.
     */
    private String handlePostRequest(HttpExchange httpExchange) {
        return handleGetRequest(httpExchange);
    }

}